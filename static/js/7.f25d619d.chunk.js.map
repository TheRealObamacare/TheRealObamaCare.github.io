{"version":3,"sources":["pages/ProjectSingle.jsx"],"names":["ProjectSingle","params","useParams","location","useLocation","console","log","window","href","pathname","manualSlug","hash","hashParts","substring","split","length","pathParts","slug","projectPath","singleProjectData","useContext","SingleProjectContext","useState","singleProject","setSingleProject","notFound","setNotFound","loading","setLoading","useEffect","Array","isArray","error","map","p","join","table","id","title","exactMatch","find","item","project","filter","match","toLowerCase","projectById","toString","className","ProjectHeader","tags","ProjectImages","image","src","img","alt","ProjectInfo","CompanyInfo","info","details","target","rel","ObjectivesHeading","ObjectivesDetails","ProjectDetailsHeading","ProjectDetails"],"mappings":"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","file":"static/js/7.f25d619d.chunk.js","sourcesContent":["import { useParams, useLocation } from 'react-router-dom';\nimport { useContext, useEffect, useState } from 'react';\nimport { SingleProjectContext } from '../context/SingleProjectContext';\nimport { FiClock, FiTag } from 'react-icons/fi';\n\nconst ProjectSingle = () => {\n\t// Get both params and full location for debugging\n\tconst params = useParams();\n\tconst location = useLocation();\n\t\n\t// Display full URL parsing details\n\tconsole.log(\"RAW URL:\", window.location.href);\n\tconsole.log(\"URL PATHNAME:\", window.location.pathname);\n\t\n\t// Extract slug from URL - handle both HashRouter and BrowserRouter paths\n\t// For HashRouter: /#/projects/slug or /#/project/slug\n\t// For BrowserRouter: /projects/slug or /project/slug\n\tlet manualSlug = '';\n\tif (window.location.hash) {\n\t\t// HashRouter - extract from hash\n\t\tconst hashPath = window.location.hash.substring(1); // remove the # character\n\t\tconst hashParts = hashPath.split('/');\n\t\tmanualSlug = hashParts[hashParts.length - 1];\n\t\tconsole.log(\"Hash router path parts:\", hashParts);\n\t} else {\n\t\t// BrowserRouter - extract from pathname\n\t\tconst pathParts = window.location.pathname.split('/');\n\t\tmanualSlug = pathParts[pathParts.length - 1];\n\t}\n\tconsole.log(\"Manually extracted slug:\", manualSlug);\n\t\n\t// Try both the params and manual extraction\n\t// Check for both 'slug' and 'projectPath' params to handle both router configurations\n\tconst slug = params?.slug || params?.projectPath || manualSlug || '';\n\tconsole.log(\"FINAL SLUG VALUE:\", slug);\n\t\n\tconst { singleProjectData } = useContext(SingleProjectContext);\n\tconst [singleProject, setSingleProject] = useState([]);\n\tconst [notFound, setNotFound] = useState(false);\n\tconst [loading, setLoading] = useState(true);\n\n\t// Find the project with improved slug matching\n\tuseEffect(() => {\n\t\t// Enhanced debugging\n\t\tconsole.log(\"Current URL:\", window.location.href);\n\t\tconsole.log(\"Route path:\", location.pathname);\n\t\tconsole.log(\"URL params:\", params);\n\t\tconsole.log(\"Extracted slug:\", slug);\n\t\tconsole.log(\"Available projects:\", singleProjectData);\n\t\t\n\t\t// Check if singleProjectData exists and has items\n\t\tif (!singleProjectData || !Array.isArray(singleProjectData) || singleProjectData.length === 0) {\n\t\t\tconsole.log(\"Project data not loaded yet\");\n\t\t\tsetLoading(true);\n\t\t\treturn; // Exit early, wait for data to load\n\t\t}\n\t\t\n\t\tsetLoading(false);\n\t\t\n\t\t// Extra safety check for slug\n\t\tif (!slug) {\n\t\t\tconsole.error(\"No slug provided in URL\");\n\t\t\tsetNotFound(true);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconsole.log(`Looking for project with slug: \"${slug}\"`);\n\t\tconsole.log(\"Available slugs:\", singleProjectData.map(p => `\"${p.slug}\"`).join(\", \"));\n\t\t\n\t\t\t// First, log all available projects and their slugs for comparison\n\t\t\tconsole.table(singleProjectData.map(p => ({\n\t\t\t\tid: p.id,\n\t\t\t\ttitle: p.title,\n\t\t\t\tslug: p.slug\n\t\t\t})));\n\t\t\t\n\t\t\t// Try a direct match\n\t\t\tconst exactMatch = singleProjectData.find(item => \n\t\t\t\titem && item.slug && item.slug === slug\n\t\t\t);\n\t\t\t\n\t\t\tif (exactMatch) {\n\t\t\t\tconsole.log(\"Found exact match:\", exactMatch.title);\n\t\t\t\tsetSingleProject([exactMatch]);\n\t\t\t\tsetNotFound(false);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t\n\t\t// More robust slug comparison (case-insensitive)\n\t\tconst project = singleProjectData.filter((item) => {\n\t\t\tconst match = item && item.slug && slug && item.slug.toLowerCase() === slug.toLowerCase();\n\t\t\tconsole.log(`Comparing slug \"${item?.slug}\" with \"${slug}\": ${match}`);\n\t\t\treturn match;\n\t\t});\n\t\t\n\t\t// If no project found, try to find by id in case slug is an id\n\t\tif (project.length === 0) {\n\t\t\tconst projectById = singleProjectData.filter(item => item && item.id && item.id.toString() === slug);\n\t\t\tif (projectById.length === 0) {\n\t\t\t\tsetNotFound(true);\n\t\t\t\tconsole.error(\"No project found with slug or id:\", slug);\n\t\t\t} else {\n\t\t\t\tsetSingleProject(projectById);\n\t\t\t\tsetNotFound(false);\n\t\t\t}\n\t\t} else {\n\t\t\tsetSingleProject(project);\n\t\t\tsetNotFound(false);\n\t\t}\n\t}, [slug, singleProjectData, location]);\n\n\tif (loading) {\n\t\treturn (\n\t\t\t<div className=\"container mx-auto py-10 text-center\">\n\t\t\t\t<h1 className=\"text-3xl font-bold\">Loading project...</h1>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (notFound) {\n\t\treturn (\n\t\t\t<div className=\"container mx-auto py-10 text-center\">\n\t\t\t\t<h1 className=\"text-3xl font-bold\">Project Not Found</h1>\n\t\t\t\t<p className=\"mt-4\">Could not find project with slug: {slug}</p>\n\t\t\t\t<p className=\"mt-2\">Available slugs: {singleProjectData.map(p => p.slug).join(\", \")}</p>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className=\"container mx-auto\">\n\t\t\t{singleProject.map((project) => (\n\t\t\t\t<div className=\"mt-10 sm:mt-20\" key={project.id}>\n\t\t\t\t\t{/* Project header */}\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p className=\"font-general-medium text-left text-3xl sm:text-4xl font-bold text-primary-dark dark:text-primary-light mt-14 sm:mt-20 mb-7\">\n\t\t\t\t\t\t\t{project.ProjectHeader.title}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{/* Project tags */}\n\t\t\t\t\t\t<div className=\"flex\">\n\t\t\t\t\t\t\t<div className=\"flex items-center mr-10\">\n\t\t\t\t\t\t\t\t<FiTag className=\"text-lg text-ternary-dark dark:text-ternary-light\" />\n\t\t\t\t\t\t\t\t<span className=\"font-general-regular ml-2 leading-none text-primary-dark dark:text-primary-light\">\n\t\t\t\t\t\t\t\t\t{project.ProjectHeader.tags}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Project gallery */}\n\t\t\t\t\t<div className=\"grid grid-cols-1 sm:grid-cols-2 sm:gap-10 mt-12\">\n\t\t\t\t\t\t{project.ProjectImages.map((image) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className=\"mb-10 sm:mb-0\" key={image.id}>\n\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\tsrc={image.img}\n\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-xl cursor-pointer shadow-lg sm:shadow-none\"\n\t\t\t\t\t\t\t\t\t\talt={project.ProjectHeader.title}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Project details */}\n\t\t\t\t\t<div className=\"sm:col-span-1\">\n\t\t\t\t\t\t<p className=\"text-primary-dark dark:text-primary-light text-2xl font-bold mb-7\">\n\t\t\t\t\t\t\tProject Info\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t{project.ProjectInfo.CompanyInfo.map((info) => (\n\t\t\t\t\t\t\t<div key={info.id} className=\"mb-2\">\n\t\t\t\t\t\t\t\t<p className=\"text-lg text-ternary-dark dark:text-ternary-light font-normal\">\n\t\t\t\t\t\t\t\t\t{info.title}: {\" \"}\n\t\t\t\t\t\t\t\t\t{info.title === \"GitHub\" ? (\n\t\t\t\t\t\t\t\t\t\t<a \n\t\t\t\t\t\t\t\t\t\t\thref={info.details}\n\t\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"font-normal text-indigo-500 hover:underline\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tView Repository\n\t\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t\t<span className=\"font-normal\">{info.details}</span>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Project objectives */}\n\t\t\t\t\t<div className=\"mt-10 sm:mt-14\">\n\t\t\t\t\t\t<p className=\"font-general-regular text-primary-dark dark:text-primary-light text-2xl font-bold mb-7\">\n\t\t\t\t\t\t\t{project.ProjectInfo.ObjectivesHeading}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"font-general-regular text-lg text-ternary-dark dark:text-ternary-light\">\n\t\t\t\t\t\t\t{project.ProjectInfo.ObjectivesDetails}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{/* Project Details */}\n\t\t\t\t\t<div className=\"mt-10 sm:mt-14\">\n\t\t\t\t\t\t<p className=\"font-general-regular text-primary-dark dark:text-primary-light text-2xl font-bold mb-7\">\n\t\t\t\t\t\t\t{project.ProjectInfo.ProjectDetailsHeading}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<ul className=\"list-disc\">\n\t\t\t\t\t\t\t{project.ProjectInfo.ProjectDetails.map((details) => (\n\t\t\t\t\t\t\t\t<li\n\t\t\t\t\t\t\t\t\tkey={details.id}\n\t\t\t\t\t\t\t\t\tclassName=\"font-general-regular text-lg text-ternary-dark dark:text-ternary-light mb-2\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{details.details}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default ProjectSingle;\n"],"sourceRoot":""}