(this["webpackJsonpreact-tailwindcss-portfolio"]=this["webpackJsonpreact-tailwindcss-portfolio"]||[]).push([[0],{18:function(e,t,i){"use strict";var a=i(23),r=i.p+"static/media/nn.e83cbc25.jpg",n=i.p+"static/media/backProp.a9ef4e8a.jpg",o=i.p+"static/media/mobile-project-1.a9260763.jpg",s=i.p+"static/media/email.2e1d068e.png",c=i.p+"static/media/naiveBayes.0ebe1870.png",l=i.p+"static/media/sklearn.dfd7185a.png",d=i.p+"static/media/deepLearning.95f1c665.png",m=i.p+"static/media/deep-learning-with-python.f01f4ea3.jpg",h=i.p+"static/media/transformer.9d4e1585.png",g=[{id:1,title:"Backpropagation Algorithm",category:"Machine Learning",img:n,path:"/projects/backpropagation-algorithm",slug:"backpropagation-algorithm",technologies:["Python","NumPy","PyTorch","Matplotlib"],ProjectHeader:{title:"Backpropagation Algorithm Implementation",publishDate:"",tags:"ML / Neural Networks / Optimization"},ProjectDetails:{client:"Research Project",technologies:["Python","NumPy","PyTorch","Matplotlib"],objective:"Develop a from-scratch implementation of the backpropagation algorithm",description:"A comprehensive implementation of the backpropagation algorithm for neural networks, with visualizations of gradient flow and learning dynamics."},ProjectImages:[{id:1,title:"Backpropagation Algorithm",img:r},{id:2,title:"Gradient Flow Visualization",img:n}],ProjectInfo:{ClientHeading:"Project Type",CompanyInfo:[{id:1,title:"Category",details:"Machine Learning Research"},{id:2,title:"Field",details:"Neural Networks"},{id:3,title:"GitHub",details:"https://github.com/TheRealObamacare/Neural-Network-Practice/blob/main/backpropAlg.ipynb"}],ObjectivesHeading:"Objective",ObjectivesDetails:"Implement and visualize the backpropagation algorithm from scratch to deepen understanding of neural network training dynamics",Technologies:[{title:"Tools & Technologies",techs:["Python","NumPy","PyTorch","Matplotlib","Jupyter Notebooks"]}],ProjectDetailsHeading:"Project Details",ProjectDetails:[{id:1,details:"Implemented the backpropagation algorithm from first principles using only NumPy"},{id:2,details:"Created visualizations of gradient flow through the network during training"},{id:3,details:"Compared performance with PyTorch's automatic differentiation"},{id:4,details:"Analyzed the impact of different activation functions and initialization methods"}],SocialSharingHeading:"Share This",SocialSharing:[{id:1,name:"Twitter",icon:"twitter",url:"https://twitter.com/intent/tweet?text="},{id:2,name:"LinkedIn",icon:"linkedin",url:"https://linkedin.com/"},{id:3,name:"GitHub",icon:"github",url:"https://github.com"}]},RelatedProject:{title:"Related ML Projects",Projects:[{id:1,title:"Scikit-Learn Classifier",img:l,path:"/projects/sklearn-classifier",technologies:["Python","Scikit-Learn","Pandas","Matplotlib"]},{id:2,title:"Spam Email Classifier",img:s,path:"/projects/spam-email-classifier",technologies:["Python","TensorFlow","NLTK","Gmail API"]},{id:3,title:"Neural Network Practice",img:r,path:"/projects/neural-network-practice",technologies:["Python","TensorFlow","PyTorch","WaveNet"]}]}},{id:2,title:"Scikit-Learn Classifier",category:"Machine Learning",img:o,path:"/projects/sklearn-classifier",slug:"sklearn-classifier",technologies:["Python","Scikit-Learn","Pandas","Matplotlib"],ProjectHeader:{title:"Scikit-Learn Classification Projects",publishDate:"",tags:"ML / Classification / Data Science"},ProjectDetails:{client:"Research Project",technologies:["Python","Scikit-Learn","Pandas","Matplotlib"],objective:"Compare different classification algorithms on various datasets",description:"A series of classification projects using Scikit-Learn to analyze and predict outcomes on different datasets, comparing algorithm performance."},ProjectImages:[{id:1,title:"Scikit-Learn Classifier",img:l},{id:2,title:"Scikit-Learn Framework",img:o}],ProjectInfo:{ClientHeading:"Project Type",CompanyInfo:[{id:1,title:"Category",details:"Machine Learning Research"},{id:2,title:"Field",details:"Classification"},{id:3,title:"GitHub",details:"https://github.com/TheRealObamacare/learningRegressionModels"}],ObjectivesHeading:"Objective",ObjectivesDetails:"Compare the performance of different classification algorithms across a variety of datasets to identify strengths and weaknesses",Technologies:[{title:"Tools & Technologies",techs:["Python","Scikit-Learn","Pandas","Matplotlib","Jupyter Notebooks"]}],ProjectDetailsHeading:"Project Details",ProjectDetails:[{id:1,details:"Implemented and compared logistic regression, decision trees, random forests, and support vector machines"},{id:2,details:"Created visualization tools for confusion matrices and ROC curves"},{id:3,details:"Conducted hyperparameter tuning using grid search and cross-validation"},{id:4,details:"Analyzed feature importance and performed feature selection"}],SocialSharingHeading:"Share This",SocialSharing:[{id:1,name:"Twitter",icon:"twitter",url:"https://twitter.com/intent/tweet?text="},{id:2,name:"LinkedIn",icon:"linkedin",url:"https://linkedin.com/"},{id:3,name:"GitHub",icon:"github",url:"https://github.com"}]},RelatedProject:{title:"Related ML Projects",Projects:[{id:1,title:"Backpropagation Algorithm",img:r,path:"/projects/backpropagation-algorithm",technologies:["Python","NumPy","PyTorch","Matplotlib"]},{id:2,title:"Spam Email Classifier",img:s,path:"/projects/spam-email-classifier",technologies:["Python","TensorFlow","NLTK","Gmail API"]},{id:3,title:"Neural Network Practice",img:c,path:"/projects/neural-network-practice",technologies:["Python","TensorFlow","PyTorch","WaveNet"]}]}},{id:3,title:"Spam Email Classifier",category:"Machine Learning",img:s,path:"/projects/spam-email-classifier",slug:"spam-email-classifier",technologies:["Python","TensorFlow","NLTK","Gmail API"],ProjectHeader:{title:"Gmail Spam Email Classifier",publishDate:"",tags:"ML / NLP / Email"},ProjectDetails:{client:"Research Project",technologies:["Python","TensorFlow","NLTK","Gmail API"],objective:"Build a spam email classifier that integrates with Gmail",description:"A machine learning system that connects to Gmail, reads emails, and uses natural language processing to classify them as spam or legitimate."},ProjectImages:[{id:1,title:"Spam Email Classifier",img:s},{id:2,title:"Naive Bayes Classification",img:c}],ProjectInfo:{ClientHeading:"Project Type",CompanyInfo:[{id:1,title:"Category",details:"Machine Learning Application"},{id:2,title:"Field",details:"Natural Language Processing"},{id:3,title:"GitHub",details:"https://github.com/TheRealObamacare/SpamEmailClassifier"}],ObjectivesHeading:"Objective",ObjectivesDetails:"Create an effective spam filter that can integrate with Gmail and accurately identify unwanted messages",Technologies:[{title:"Tools & Technologies",techs:["Python","TensorFlow","NLTK","Gmail API","OAuth2"]}],ProjectDetailsHeading:"Project Details",ProjectDetails:[{id:1,details:"Integrated with Gmail API to securely access email content"},{id:2,details:"Applied NLP techniques for text preprocessing, including tokenization, stemming, and stop word removal"},{id:3,details:"Built and trained a neural network model for text classification with over 95% accuracy"},{id:4,details:"Implemented a simple web interface to view classification results and manage false positives/negatives"}],SocialSharingHeading:"Share This",SocialSharing:[{id:1,name:"Twitter",icon:"twitter",url:"https://twitter.com/intent/tweet?text="},{id:2,name:"LinkedIn",icon:"linkedin",url:"https://linkedin.com/"},{id:3,name:"GitHub",icon:"github",url:"https://github.com"}]},RelatedProject:{title:"Related ML Projects",Projects:[{id:1,title:"Backpropagation Algorithm",img:r,path:"/projects/backpropagation-algorithm",technologies:["Python","NumPy","PyTorch","Matplotlib"]},{id:2,title:"Scikit-Learn Classifier",img:o,path:"/projects/sklearn-classifier",technologies:["Python","Scikit-Learn","Pandas","Matplotlib"]},{id:3,title:"Neural Network Practice",img:c,path:"/projects/neural-network-practice",technologies:["Python","TensorFlow","PyTorch","WaveNet"]}]}},{id:4,title:"Neural Network Practice",category:"Machine Learning",img:r,path:"/projects/neural-network-practice",slug:"neural-network-practice",technologies:["Python","TensorFlow","PyTorch","WaveNet"],ProjectHeader:{title:"Neural Network Architectures Comparison",publishDate:"",tags:"ML / Deep Learning / Character Prediction"},ProjectDetails:{client:"Research Project",technologies:["Python","TensorFlow","PyTorch","WaveNet"],objective:"Compare different neural network architectures for character prediction",description:"A comprehensive comparison of neural network architectures including single-layer, multilayer perceptrons, and WaveNets for character-level prediction tasks."},ProjectImages:[{id:1,title:"Neural Network Comparison",img:r},{id:2,title:"Architecture Diagram",img:n}],ProjectInfo:{ClientHeading:"Project Type",CompanyInfo:[{id:1,title:"Category",details:"Deep Learning Research"},{id:2,title:"Field",details:"Natural Language Processing"},{id:3,title:"GitHub",details:"https://github.com/TheRealObamacare/Neural-Network-Practice"}],ObjectivesHeading:"Objective",ObjectivesDetails:"Implement and compare different neural network architectures for the task of predicting the next character in a sequence",Technologies:[{title:"Tools & Technologies",techs:["Python","TensorFlow","PyTorch","WaveNet","LSTM","MLP"]}],ProjectDetailsHeading:"Project Details",ProjectDetails:[{id:1,details:"Implemented single-layer, multilayer perceptron, and WaveNet architectures from scratch"},{id:2,details:"Trained models on a large corpus of text to predict the next character in a sequence"},{id:3,details:"Conducted a detailed comparison of model performance, training time, and memory requirements"},{id:4,details:"Applied the backpropagation algorithm to understand the learning dynamics of each architecture"}],SocialSharingHeading:"Share This",SocialSharing:[{id:1,name:"Twitter",icon:"twitter",url:"https://twitter.com/intent/tweet?text="},{id:2,name:"LinkedIn",icon:"linkedin",url:"https://linkedin.com/"},{id:3,name:"GitHub",icon:"github",url:"https://github.com"}]},RelatedProject:{title:"Related ML Projects",Projects:[{id:1,title:"Backpropagation Algorithm",img:r,path:"/projects/backpropagation-algorithm",technologies:["Python","NumPy","PyTorch","Matplotlib"]},{id:2,title:"Scikit-Learn Classifier",img:o,path:"/projects/sklearn-classifier",technologies:["Python","Scikit-Learn","Pandas","Matplotlib"]},{id:3,title:"Spam Email Classifier",img:s,path:"/projects/spam-email-classifier",technologies:["Python","TensorFlow","NLTK","Gmail API"]}]}},{id:5,title:"Transformer Architectures",category:"Machine Learning",img:h,path:"/projects/transformer-architectures",slug:"transformer-architectures",technologies:["Python","PyTorch","Transformers","NLP"],ProjectHeader:{title:"Transformer Models Implementation",publishDate:"",tags:"ML / NLP / Attention Mechanisms"},ProjectDetails:{client:"Research Project",technologies:["Python","PyTorch","Transformers","NLP"],objective:"Implement and experiment with transformer architecture components",description:"A deep dive into transformer architectures including attention mechanisms, tokenization, and GPT-style models."},ProjectImages:[{id:1,title:"Transformer Architecture",img:h},{id:2,title:"Attention Visualization",img:r}],ProjectInfo:{ClientHeading:"Project Type",CompanyInfo:[{id:1,title:"Category",details:"Deep Learning Research"},{id:2,title:"Field",details:"Natural Language Processing"},{id:3,title:"GitHub",details:"https://github.com/TheRealObamacare/transformerArchitectures"}],ObjectivesHeading:"Objective",ObjectivesDetails:"Build transformer components from scratch to understand the architecture that powers models like GPT and BERT",Technologies:[{title:"Tools & Technologies",techs:["Python","PyTorch","Attention Mechanisms","Tokenizers","Self-Supervised Learning"]}],ProjectDetailsHeading:"Project Details",ProjectDetails:[{id:1,details:"Implemented a basic transformer architecture with self-attention mechanisms"},{id:2,details:"Created a tokenization pipeline for text processing"},{id:3,details:"Built a simplified GPT-style model for text generation"},{id:4,details:"Experimented with different attention patterns and positional encoding methods"}],SocialSharingHeading:"Share This",SocialSharing:[{id:1,name:"Twitter",icon:"twitter",url:"https://twitter.com/intent/tweet?text="},{id:2,name:"LinkedIn",icon:"linkedin",url:"https://linkedin.com/"},{id:3,name:"GitHub",icon:"github",url:"https://github.com"}]},RelatedProject:{title:"Related ML Projects",Projects:[{id:1,title:"Neural Network Practice",img:r,path:"/projects/neural-network-practice",technologies:["Python","TensorFlow","PyTorch","WaveNet"]},{id:2,title:"Deep Learning Practice",img:d,path:"/projects/deep-learning-practice",technologies:["Python","TensorFlow","Keras","Computer Vision"]},{id:3,title:"Backpropagation Algorithm",img:n,path:"/projects/backpropagation-algorithm",technologies:["Python","NumPy","PyTorch","Matplotlib"]}]}},{id:6,title:"Deep Learning Practice",category:"Machine Learning",img:d,path:"/projects/deep-learning-practice",slug:"deep-learning-practice",technologies:["Python","TensorFlow","Keras","Computer Vision"],ProjectHeader:{title:"Deep Learning with Python",publishDate:"",tags:"ML / Deep Learning / TensorFlow"},ProjectDetails:{client:"Research Project",technologies:["Python","TensorFlow","Keras","Computer Vision"],objective:"Learn deep learning concepts following Fran\xe7ois Chollet's book",description:'A comprehensive implementation of deep learning models and techniques from the book "Deep Learning with Python" by Fran\xe7ois Chollet.'},ProjectImages:[{id:1,title:"Tensor Operations",img:m},{id:2,title:"MNIST Classification",img:d}],ProjectInfo:{ClientHeading:"Project Type",CompanyInfo:[{id:1,title:"Category",details:"Deep Learning Research"},{id:2,title:"Field",details:"Computer Vision & Neural Networks"},{id:3,title:"GitHub",details:"https://github.com/TheRealObamacare/deepLearningPractice"}],ObjectivesHeading:"Objective",ObjectivesDetails:'Work through the exercises and concepts in Fran\xe7ois Chollet\'s "Deep Learning with Python" to build a strong foundation in deep learning',Technologies:[{title:"Tools & Technologies",techs:["Python","TensorFlow","Keras","CNN","MNIST","Tensor Operations"]}],ProjectDetailsHeading:"Project Details",ProjectDetails:[{id:1,details:"Implemented fundamental tensor operations and manipulations"},{id:2,details:"Built and trained neural networks for MNIST digit classification"},{id:3,details:"Explored deep learning concepts including gradient descent, backpropagation, and optimization"},{id:4,details:"Worked through convolutional neural networks for image recognition tasks"}],SocialSharingHeading:"Share This",SocialSharing:[{id:1,name:"Twitter",icon:"twitter",url:"https://twitter.com/intent/tweet?text="},{id:2,name:"LinkedIn",icon:"linkedin",url:"https://linkedin.com/"},{id:3,name:"GitHub",icon:"github",url:"https://github.com"}]},RelatedProject:{title:"Related ML Projects",Projects:[{id:1,title:"Transformer Architectures",img:h,path:"/projects/transformer-architectures",technologies:["Python","PyTorch","Transformers","NLP"]},{id:2,title:"Neural Network Practice",img:c,path:"/projects/neural-network-practice",technologies:["Python","TensorFlow","PyTorch","WaveNet"]},{id:3,title:"Backpropagation Algorithm",img:n,path:"/projects/backpropagation-algorithm",technologies:["Python","NumPy","PyTorch","Matplotlib"]}]}}].map((function(e){if(!e.slug){var t,i=(null===(t=e.ProjectHeader)||void 0===t?void 0:t.title)||e.title||"project-".concat(e.id);return Object(a.a)(Object(a.a)({},e),{},{slug:(r=i,r.toLowerCase().replace(/[^\w ]+/g,"").replace(/ +/g,"-"))})}var r;return e}));t.a=g},21:function(e,t,i){"use strict";var a=i(2);t.a=function(e){var t=e.title;return Object(a.jsx)("button",{children:t})}},26:function(e,t,i){},27:function(e,t,i){"use strict";i.d(t,"a",(function(){return s})),i.d(t,"b",(function(){return c}));var a=i(6),r=i(1),n=i(18),o=i(2),s=Object(r.createContext)(),c=function(e){var t=e.children,i=Object(r.useState)([]),c=Object(a.a)(i,2),l=c[0],d=c[1];return Object(r.useEffect)((function(){console.log("Loading project data in context"),Array.isArray(n.a)&&n.a.length>0?(console.log("Loaded ".concat(n.a.length," projects with slugs:"),n.a.map((function(e){return e.slug})).join(", ")),d(n.a)):console.error("Project data is not available or not an array")}),[]),Object(o.jsx)(s.Provider,{value:{singleProjectData:l,setSingleProjectData:d},children:t})}},28:function(e,t,i){"use strict";var a=i(6),r=i(1);t.a=function(){var e=Object(r.useState)(localStorage.theme),t=Object(a.a)(e,2),i=t[0],n=t[1],o="dark"===i?"light":"dark";return Object(r.useEffect)((function(){var e=window.document.documentElement;e.classList.remove(o),e.classList.add(i),localStorage.setItem("theme",i)}),[i,o]),[o,n]}},38:function(e,t,i){"use strict";i.r(t);var a=i(1),r=i.n(a),n=i(29),o=i.n(n),s=(i(26),i(13)),c=i(3),l=i(27),d=i(41),m=function(){var e=Object(c.e)().pathname;return Object(a.useEffect)((function(){window.scrollTo(0,0)}),[e]),null},h=i(7),g=i(2);var p=[{id:2,icon:Object(g.jsx)(h.b,{}),url:"https://github.com/therealobamacare"},{id:3,icon:Object(g.jsx)(h.c,{}),url:"https://www.instagram.com/kalmanivani/"},{id:4,icon:Object(g.jsx)(h.d,{}),url:"https://www.linkedin.com/in/kal-manivani-6a54682aa/"}],u=function(){return Object(g.jsx)("div",{className:"container mx-auto",children:Object(g.jsx)("div",{className:"pt-20 sm:pt-30 pb-8 mt-20 border-t-2 border-primary-light dark:border-secondary-dark",children:Object(g.jsxs)("div",{className:"font-general-regular flex flex-col justify-center items-center mb-12 sm:mb-28",children:[Object(g.jsx)("p",{className:"text-3xl sm:text-4xl text-primary-dark dark:text-primary-light mb-5",children:"Follow me"}),Object(g.jsx)("ul",{className:"flex gap-4 sm:gap-8",children:p.map((function(e){return Object(g.jsx)("a",{href:e.url,target:"__blank",className:"text-gray-400 hover:text-indigo-500 dark:hover:text-indigo-400 cursor-pointer rounded-lg bg-gray-50 dark:bg-ternary-dark hover:bg-gray-100 shadow-sm p-4 duration-300",children:Object(g.jsx)("i",{className:"text-xl sm:text-2xl md:text-3xl",children:e.icon})},e.id)}))})]})})})},j=i(6),b=i(28),f=i(40),y=i(21),x=i.p+"static/media/dark-mode-K.9fb0eba9.png",P=i.p+"static/media/K.f4a10696.jpg",k=function(){var e=Object(a.useState)(!1),t=Object(j.a)(e,2),i=t[0],r=t[1],n=Object(a.useState)(!1),o=Object(j.a)(n,2),c=o[0],l=o[1],d=Object(b.a)(),m=Object(j.a)(d,2),p=m[0],u=m[1];return Object(g.jsx)(f.a.nav,{initial:{opacity:0},animate:{opacity:1},id:"nav",className:"sm:container sm:mx-auto",children:Object(g.jsxs)("div",{className:"z-10 max-w-screen-lg xl:max-w-screen-xl block sm:flex sm:justify-between sm:items-center py-6",children:[Object(g.jsxs)("div",{className:"flex justify-between items-center px-4 sm:px-0",children:[Object(g.jsx)("div",{children:Object(g.jsx)(s.b,{to:"/",children:"dark"===p?Object(g.jsx)("img",{src:P,className:"w-36",alt:"Dark Logo"}):Object(g.jsx)("img",{src:x,className:"w-36",alt:"Dark Logo"})})}),Object(g.jsx)("div",{onClick:function(){return u(p)},"aria-label":"Theme Switcher",className:"block sm:hidden ml-0 bg-primary-light dark:bg-ternary-dark p-3 shadow-sm rounded-xl cursor-pointer",children:"dark"===p?Object(g.jsx)(h.g,{className:"text-ternary-dark hover:text-gray-400 dark:text-ternary-light dark:hover:text-primary-light text-xl"}):Object(g.jsx)(h.i,{className:"text-gray-200 hover:text-gray-50 text-xl"})}),Object(g.jsx)("div",{className:"sm:hidden",children:Object(g.jsx)("button",{onClick:function(){r(!i)},type:"button",className:"focus:outline-none","aria-label":"Hamburger Menu",children:Object(g.jsx)("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",className:"h-7 w-7 fill-current text-secondary-dark dark:text-ternary-light",children:i?Object(g.jsx)(h.k,{className:"text-3xl"}):Object(g.jsx)(h.f,{className:"text-3xl"})})})})]}),Object(g.jsxs)("div",{className:i?"block m-0 sm:ml-4 mt-5 sm:mt-3 sm:flex p-5 sm:p-0 justify-center items-center shadow-lg sm:shadow-none":"hidden",children:[Object(g.jsx)(s.b,{to:"/projects",className:"block text-left text-lg text-primary-dark dark:text-ternary-light hover:text-secondary-dark dark:hover:text-secondary-light  sm:mx-4 mb-2 sm:py-2","aria-label":"Projects",children:"Projects"}),Object(g.jsx)(s.b,{to:"/about",className:"block text-left text-lg text-primary-dark dark:text-ternary-light hover:text-secondary-dark dark:hover:text-secondary-light  sm:mx-4 mb-2 sm:py-2 border-t-2 pt-3 sm:pt-2 sm:border-t-0 border-primary-light dark:border-secondary-dark","aria-label":"About Me",children:"About Me"}),Object(g.jsx)(s.b,{to:"/contact",className:"block text-left text-lg text-primary-dark dark:text-ternary-light hover:text-secondary-dark dark:hover:text-secondary-light  sm:mx-4 mb-2 sm:py-2 border-t-2 pt-3 sm:pt-2 sm:border-t-0 border-primary-light dark:border-secondary-dark","aria-label":"Contact",children:"Contact"}),Object(g.jsx)("div",{className:"border-t-2 pt-3 sm:pt-0 sm:border-t-0 border-primary-light dark:border-secondary-dark",children:Object(g.jsx)("span",{onClick:function(){c?(document.getElementsByTagName("html")[0].classList.remove("overflow-y-hidden"),l(!1)):(document.getElementsByTagName("html")[0].classList.add("overflow-y-hidden"),l(!0))},className:"font-general-medium sm:hidden block text-left text-md bg-indigo-500 hover:bg-indigo-600 text-white shadow-sm rounded-sm px-4 py-2 mt-2 duration-300 w-24","aria-label":"Hire Me Button",children:Object(g.jsx)(y.a,{title:"Hire Me"})})})]}),Object(g.jsxs)("div",{className:"font-general-medium hidden m-0 sm:ml-4 mt-5 sm:mt-3 sm:flex p-5 sm:p-0 justify-center items-center shadow-lg sm:shadow-none",children:[Object(g.jsx)(s.b,{to:"/projects",className:"block text-left text-lg text-primary-dark dark:text-ternary-light hover:text-secondary-dark dark:hover:text-secondary-light  sm:mx-4 mb-2 sm:py-2","aria-label":"Projects",children:"Projects"}),Object(g.jsx)(s.b,{to:"/about",className:"block text-left text-lg text-primary-dark dark:text-ternary-light hover:text-secondary-dark dark:hover:text-secondary-light  sm:mx-4 mb-2 sm:py-2","aria-label":"About Me",children:"About Me"}),Object(g.jsx)(s.b,{to:"/contact",className:"block text-left text-lg text-primary-dark dark:text-ternary-light hover:text-secondary-dark dark:hover:text-secondary-light  sm:mx-4 mb-2 sm:py-2","aria-label":"Contact",children:"Contact"})]}),Object(g.jsxs)("div",{className:"hidden sm:flex justify-between items-center flex-col md:flex-row",children:[Object(g.jsx)("div",{className:"hidden md:flex",children:Object(g.jsx)("span",{"aria-label":"Hire Me Button"})}),Object(g.jsx)("div",{onClick:function(){return u(p)},"aria-label":"Theme Switcher",className:"ml-8 bg-primary-light dark:bg-ternary-dark p-3 shadow-sm rounded-xl cursor-pointer",children:"dark"===p?Object(g.jsx)(h.g,{className:"text-ternary-dark hover:text-gray-400 dark:text-ternary-light dark:hover:text-primary-light text-xl"}):Object(g.jsx)(h.i,{className:"text-gray-200 hover:text-gray-50 text-xl"})})]})]})})},w=function(){var e=Object(a.useState)(!1),t=Object(j.a)(e,2),i=t[0],r=t[1];Object(a.useEffect)((function(){return window.addEventListener("scroll",n),function(){window.removeEventListener("scroll",n)}}));var n=function(){!i&&window.pageYOffset>400?r(!0):i&&window.pageYOffset<=400&&r(!1)};return window.addEventListener("scroll",n),Object(g.jsx)(g.Fragment,{children:Object(g.jsx)(h.a,{className:"scrollToTop",onClick:function(){window.scrollTo({top:0,behavior:"smooth"})},style:{height:45,width:45,borderRadius:50,right:50,bottom:50,display:i?"flex":"none",padding:5}})})},v=Object(a.lazy)((function(){return i.e(4).then(i.bind(null,47))})),O=Object(a.lazy)((function(){return i.e(5).then(i.bind(null,49))})),T=Object(a.lazy)((function(){return i.e(7).then(i.bind(null,45))})),N=Object(a.lazy)((function(){return i.e(3).then(i.bind(null,46))})),L=Object(a.lazy)((function(){return i.e(6).then(i.bind(null,48))}));var S=function(){return Object(g.jsx)(d.a,{children:Object(g.jsx)("div",{className:"bg-secondary-light dark:bg-primary-dark transition duration-300",children:Object(g.jsxs)(s.a,{children:[Object(g.jsx)(k,{}),Object(g.jsx)(m,{}),Object(g.jsx)(a.Suspense,{fallback:Object(g.jsx)("div",{children:"Loading..."}),children:Object(g.jsxs)(c.c,{children:[Object(g.jsx)(c.a,{path:"/",element:Object(g.jsx)(v,{})}),Object(g.jsx)(c.a,{path:"/projects",element:Object(g.jsx)(O,{})}),Object(g.jsx)(c.a,{path:"/projects/:projectPath",element:Object(g.jsx)(l.b,{children:Object(g.jsx)(T,{})})}),Object(g.jsx)(c.a,{path:"/about",element:Object(g.jsx)(N,{})}),Object(g.jsx)(c.a,{path:"/contact",element:Object(g.jsx)(L,{})}),Object(g.jsx)(c.a,{path:"*",element:Object(g.jsx)("div",{children:"Page not found"})})]})}),Object(g.jsx)(u,{}),Object(g.jsx)(w,{})]})})})};var C=function(){return Object(g.jsx)(S,{})};o.a.render(Object(g.jsx)(r.a.StrictMode,{children:Object(g.jsx)(C,{})}),document.getElementById("root"))}},[[38,1,2]]]);
//# sourceMappingURL=main.db1879e5.chunk.js.map